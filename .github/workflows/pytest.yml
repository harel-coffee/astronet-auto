name: Test Suite with Code Coverage

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tutorials:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    strategy:
      # Prevent all build to stop if a single one fails
      fail-fast: false
      matrix:
        name: [
          nb-ubuntu-gcc-py37,
          # nb-osx-gcc-py37,
          # nb-osx-clang-py37,
          ]

        include:
          - name: nb-ubuntu-gcc-py37
            os: ubuntu-16.04
            compiler: gcc-7

          # - name: nb-osx-gcc-py37
          #   os: macos-latest
          #   compiler: gcc-9

          # - name: nb-osx-clang-py37
          #   os: macos-latest
          #   compiler: clang

    steps:
    - name: Checkout astronet
      uses: actions/checkout@master

    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - uses: conda-incubator/setup-miniconda@v1
      with:
        activate-environment: astronet
        environment-file: environment.yml
        python-version: 3.7
        auto-activate-base: false

    - shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: Check Environment
      run: |
        echo $PWD
        ls -la ${{ github.workspace }}/astronet/tests/
        echo $HOME
        which python
        which pip
        python --version
        echo $PATH
        PATH="/usr/share/miniconda/envs/astronet/bin:$PATH"
        which python
        which pip
        python --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install matplotlib
        pip install pytest
        pip install pytest-cov

    - name: Run pytest
      run: |
        export ASNWD=${{ github.workspace }}
        pytest --cov .
        bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}
