/Users/tallamjr/mambaforge/envs/astronet/lib/python3.8/site-packages/jax/_src/lib/__init__.py:34: UserWarning: JAX on Mac ARM machines is experimental and minimally tested. Please see https://github.com/google/jax/issues/5501 in the event of problems.
  warnings.warn("JAX on Mac ARM machines is experimental and minimally tested. "
[37m[22-06-13 23:29:24] {load_run_lpa.py:261} INFO - 0.9.3[0m
[37m[22-06-13 23:29:24] {load_run_lpa.py:262} INFO - /Users/tallamjr/github/tallamjr/origin/astronet/astronet/__init__.py[0m
[37m[22-06-13 23:29:25] {load_run_lpa.py:271} INFO - X_TEST: (869864, 100, 6), Y_TEST: (869864, 14)[0m
[37m[22-06-13 23:29:25] {load_run_lpa.py:276} INFO - Running predictions[0m
WARNING:tensorflow:SavedModel saved prior to TF 2.5 detected when loading Keras model. Please ensure that you are saving the model with model.save() or tf.keras.models.save_model(), *NOT* tf.saved_model.save(). To confirm, there should be a file named "keras_metadata.pb" in the SavedModel directory.
Metal device set to: Apple M1 Pro
[37m[22-06-13 23:37:41] {load_run_lpa.py:141} INFO - ORIGINAL T2 MODEL ON GR-noZ LL-Test: 0.97[0m
WARNING:tensorflow:SavedModel saved prior to TF 2.5 detected when loading Keras model. Please ensure that you are saving the model with model.save() or tf.keras.models.save_model(), *NOT* tf.saved_model.save(). To confirm, there should be a file named "keras_metadata.pb" in the SavedModel directory.
[37m[22-06-13 23:45:13] {load_run_lpa.py:152} INFO - COMPRESSED MODEL, aka COMPRESSED T2 LL-Test: 0.97[0m
[37m[22-06-13 23:53:47] {load_run_lpa.py:163} INFO - CLUSTERED-STRIPPED MODEL, aka TINHO LL-Test: 0.84[0m
[37m[22-06-14 00:02:09] {load_run_lpa.py:174} INFO - COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO LL-Test: 0.84[0m
[37m[22-06-14 00:09:05] {load_run_lpa.py:236} INFO - SAVED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: 0.84[0m
[37m[22-06-14 00:15:51] {load_run_lpa.py:250} INFO - SAVED QUANTIZED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: 0.83[0m
Wrote profile results to load_run_lpa.py.lprof
Timer unit: 1e-06 s

Total time: 7.75552 s
File: load_run_lpa.py
Function: get_model at line 24

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    24                                           @profile
    25                                           def get_model(
    26                                               model_name: str = "model-GR-noZ-23057-1642540624-0.1.dev963+g309c9d8-LL0.968",
    27                                           ):
    28                                               # Load pre-trained original t2 model
    29         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
    30
    31         2    7755513.0 3877756.5    100.0      model = tf.keras.models.load_model(
    32         1          0.0      0.0      0.0          model_path,
    33         1          5.0      5.0      0.0          custom_objects={"WeightedLogLoss": WeightedLogLoss()},
    34         1          0.0      0.0      0.0          compile=False,
    35                                               )
    36
    37         1          1.0      1.0      0.0      return model

Total time: 7.60647 s
File: load_run_lpa.py
Function: get_compressed_model at line 40

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    40                                           @profile
    41                                           def get_compressed_model(
    42                                               model_name: str = "model-GR-noZ-23057-1642540624-0.1.dev963+g309c9d8-LL0.968",
    43                                           ):
    44                                               # Load pre-trained zipped original t2 model
    45         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
    46
    47         1        171.0    171.0      0.0      with tempfile.TemporaryDirectory() as tmpdir:
    48         1       2336.0   2336.0      0.0          with zipfile.ZipFile(f"{model_path}.zip", mode="r") as archive:
    49         6         15.0      2.5      0.0              for file in archive.namelist():
    50         5       5168.0   1033.6      0.1                  archive.extract(file, tmpdir)
    51
    52         2    7598761.0 3799380.5     99.9          model = tf.keras.models.load_model(
    53         1          1.0      1.0      0.0              f"{tmpdir}/{model_name}",
    54         1         10.0     10.0      0.0              custom_objects={"WeightedLogLoss": WeightedLogLoss()},
    55         1          1.0      1.0      0.0              compile=False,
    56                                                   )
    57
    58         1          2.0      2.0      0.0      return model

Total time: 0 s
File: load_run_lpa.py
Function: get_compressed_convert_to_lite at line 61

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    61                                           @profile
    62                                           def get_compressed_convert_to_lite(
    63                                               model_name: str = "model-GR-noZ-23057-1642540624-0.1.dev963+g309c9d8-LL0.968",
    64                                           ):
    65                                               # Load pre-trained model
    66                                               model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
    67
    68                                               with tempfile.TemporaryDirectory() as tmpdir:
    69                                                   with zipfile.ZipFile(f"{model_path}.zip", mode="r") as archive:
    70                                                       for file in archive.namelist():
    71                                                           archive.extract(file, tmpdir)
    72
    73                                                   lmodel = get_tflite_from_saved_model(f"{tmpdir}/{model_name}")
    74
    75                                               return lmodel

Total time: 7.14257 s
File: load_run_lpa.py
Function: get_clustered_model at line 78

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    78                                           @profile
    79                                           def get_clustered_model(
    80                                               model_name: str = "model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836",
    81                                           ):
    82                                               # Load pre-trained original t2 model
    83         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/{model_name}"
    84
    85         2    7142554.0 3571277.0    100.0      model = tf.keras.models.load_model(
    86         1          0.0      0.0      0.0          model_path,
    87         1         11.0     11.0      0.0          custom_objects={"WeightedLogLoss": WeightedLogLoss()},
    88         1          0.0      0.0      0.0          compile=False,
    89                                               )
    90
    91         1          2.0      2.0      0.0      return model

Total time: 7.01873 s
File: load_run_lpa.py
Function: get_compressed_clustered_model at line 94

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    94                                           @profile
    95                                           def get_compressed_clustered_model(
    96                                               model_name: str = "model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836",
    97                                           ):
    98                                               # Load pre-trained model
    99         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/{model_name}"
   100
   101         1        184.0    184.0      0.0      with tempfile.TemporaryDirectory() as tmpdir:
   102         1        508.0    508.0      0.0          with zipfile.ZipFile(f"{model_path}.zip", mode="r") as archive:
   103         7         16.0      2.3      0.0              for file in archive.namelist():
   104         6       5243.0    873.8      0.1                  archive.extract(file, tmpdir)
   105
   106         2    7012768.0 3506384.0     99.9          model = tf.keras.models.load_model(
   107         1          1.0      1.0      0.0              f"{tmpdir}/{model_name}",
   108         1          9.0      9.0      0.0              custom_objects={"WeightedLogLoss": WeightedLogLoss()},
   109         1          1.0      1.0      0.0              compile=False,
   110                                                   )
   111
   112         1          2.0      2.0      0.0      return model

Total time: 0.00279 s
File: load_run_lpa.py
Function: get_tflite_from_file at line 115

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   115                                           @profile
   116                                           def get_tflite_from_file(model_path: str):
   117         2       2790.0   1395.0    100.0      return LiteModel.from_file(model_path=model_path)

Total time: 0 s
File: load_run_lpa.py
Function: get_tflite_from_saved_model at line 120

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   120                                           @profile
   121                                           def get_tflite_from_saved_model(model_path: str):
   122                                               return LiteModel.from_saved_model(model_path=model_path)

Total time: 496.417 s
File: load_run_lpa.py
Function: predict_original_model at line 135

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   135                                           @profile
   136                                           def predict_original_model(X_test, wloss):
   137                                               # ORIGINAL T2 MODEL ON GR-noZ
   138                                               # BASELINE
   139         1    7755532.0 7755532.0      1.6      model = get_model()
   140         1  488549541.0 488549541.0     98.4      y_preds = model.predict(X_test)
   141         2        135.0     67.5      0.0      log.info(
   142         1     112066.0 112066.0      0.0          f"ORIGINAL T2 MODEL ON GR-noZ LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   143                                               )

Total time: 452.188 s
File: load_run_lpa.py
Function: predict_compressed_model at line 146

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   146                                           @profile
   147                                           def predict_compressed_model(X_test, wloss):
   148                                               # COMPRESSED MODEL, aka COMPRESSED T2
   149                                               # BASELINE + HUFFMAN
   150         1    7606488.0 7606488.0      1.7      cmodel = get_compressed_model()
   151         1  444485220.0 444485220.0     98.3      y_preds = cmodel.predict(X_test)
   152         2        146.0     73.0      0.0      log.info(
   153         1      96388.0  96388.0      0.0          f"COMPRESSED MODEL, aka COMPRESSED T2 LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   154                                               )

Total time: 513.777 s
File: load_run_lpa.py
Function: predict_clustered_model at line 157

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   157                                           @profile
   158                                           def predict_clustered_model(X_test, wloss):
   159                                               # CLUSTERED-STRIPPED MODEL, aka TINHO
   160                                               # CLUSTERING
   161         1    7142581.0 7142581.0      1.4      cmodel = get_clustered_model()
   162         1  506547697.0 506547697.0     98.6      y_preds = cmodel.predict(X_test)
   163         2        139.0     69.5      0.0      log.info(
   164         1      87060.0  87060.0      0.0          f"CLUSTERED-STRIPPED MODEL, aka TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   165                                               )

Total time: 501.615 s
File: load_run_lpa.py
Function: predict_compressed_clustered_model at line 168

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   168                                           @profile
   169                                           def predict_compressed_clustered_model(X_test, wloss):
   170                                               # COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO
   171                                               # CLUSTERING + HUFFMAN
   172         1    7018758.0 7018758.0      1.4      cmodel = get_compressed_clustered_model()
   173         1  494499217.0 494499217.0     98.6      y_preds = cmodel.predict(X_test)
   174         2        147.0     73.5      0.0      log.info(
   175         1      96804.0  96804.0      0.0          f"COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   176                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_pruned_model at line 179

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   179                                           @profile
   180                                           def predict_pruned_model(X_test, wloss):
   181                                               # PRUNED-STRIPPED MODEL
   182                                               # PRUNING
   183                                               # TODO: Update model_name
   184                                               model_name = ""
   185                                               pmodel = get_pruned_model(model_name)
   186                                               y_preds = pmodel.predict(X_test)
   187                                               log.info(f"PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}")

Total time: 0 s
File: load_run_lpa.py
Function: predict_compressed_clustered_pruned_model at line 190

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   190                                           @profile
   191                                           def predict_compressed_clustered_pruned_model(X_test, wloss):
   192                                               # COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, aka COMPRESSED TINHO
   193                                               # CLUSTERING + PRUNING + HUFFMAN
   194                                               # TODO: Update model_name
   195                                               model_name = ""
   196                                               ccpmodel = get_compressed_clustered_pruned_model(model_name)
   197                                               y_preds = ccpmodel.predict(X_test)
   198                                               log.info(
   199                                                   f"COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   200                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_clustered_tflite_model at line 203

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   203                                           @profile
   204                                           def predict_clustered_tflite_model(X_test, wloss):
   205                                               # CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   206                                               # CLUSTERING-FLATBUFFER CONVERSION
   207                                               model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
   208                                               lmodel = get_tflite_from_saved_model(model_path)
   209                                               y_preds = lmodel.predict(X_test)
   210                                               log.info(
   211                                                   f"TFLITE CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   212                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_compressed_clustered_tflite_model at line 215

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   215                                           @profile
   216                                           def predict_compressed_clustered_tflite_model(X_test, wloss):
   217                                               # COMPRESSED CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   218                                               # CLUSTERING-FLATBUFFER + HUFFMAN
   219                                               # TODO: Update model_name
   220                                               model_name = "tinho/compressed_clustered_stripped_fink_model"
   221                                               clmodel = get_compressed_lite_model(model_name)
   222                                               y_preds = clmodel.predict(X_test)
   223                                               log.info(
   224                                                   f"TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   225                                               )

Total time: 416.682 s
File: load_run_lpa.py
Function: predict_saved_clustered_tflite_model at line 228

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   228                                           @profile
   229                                           def predict_saved_clustered_tflite_model(X_test, wloss):
   230                                               # SAVED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE
   231                                               # CLUSTERING-FLATBUFFER
   232                                               # Load clustered model TFLite model, i.e. a .tflife model/file on disk
   233         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836.tflite"
   234         1        886.0    886.0      0.0      clmodel = get_tflite_from_file(model_path)
   235         1  416593620.0 416593620.0    100.0      y_preds = clmodel.predict(X_test)
   236         2        143.0     71.5      0.0      log.info(
   237         1      87340.0  87340.0      0.0          f"SAVED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   238                                               )

Total time: 405.856 s
File: load_run_lpa.py
Function: predict_saved_clustered_quantized_tflite_model at line 241

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   241                                           @profile
   242                                           def predict_saved_clustered_quantized_tflite_model(X_test, wloss):
   243                                               # SAVED QUANTIZED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE
   244                                               # CLUSTERING-FLATBUFFER + QUANTIZATION
   245                                               # Load clustered model TFLite model, i.e. a .tflife model/file on disk
   246                                               # model_path = f"{asnwd}/sbin/lnprof/clustered_stripped_fink_model_quantized.tflite"
   247         1          2.0      2.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/quantized-model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836.tflite"
   248         1       1913.0   1913.0      0.0      clmodel = get_tflite_from_file(model_path)
   249         1  405755985.0 405755985.0    100.0      y_preds = clmodel.predict(X_test)
   250         2        138.0     69.0      0.0      log.info(
   251         1      98099.0  98099.0      0.0          f"SAVED QUANTIZED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   252                                               )


systemMemory: 32.00 GB
maxCacheSize: 10.67 GB

Timer unit: 1e-06 s

Total time: 7.75552 s
File: load_run_lpa.py
Function: get_model at line 24

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    24                                           @profile
    25                                           def get_model(
    26                                               model_name: str = "model-GR-noZ-23057-1642540624-0.1.dev963+g309c9d8-LL0.968",
    27                                           ):
    28                                               # Load pre-trained original t2 model
    29         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
    30
    31         2    7755513.0 3877756.5    100.0      model = tf.keras.models.load_model(
    32         1          0.0      0.0      0.0          model_path,
    33         1          5.0      5.0      0.0          custom_objects={"WeightedLogLoss": WeightedLogLoss()},
    34         1          0.0      0.0      0.0          compile=False,
    35                                               )
    36
    37         1          1.0      1.0      0.0      return model

Total time: 7.60647 s
File: load_run_lpa.py
Function: get_compressed_model at line 40

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    40                                           @profile
    41                                           def get_compressed_model(
    42                                               model_name: str = "model-GR-noZ-23057-1642540624-0.1.dev963+g309c9d8-LL0.968",
    43                                           ):
    44                                               # Load pre-trained zipped original t2 model
    45         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
    46
    47         1        171.0    171.0      0.0      with tempfile.TemporaryDirectory() as tmpdir:
    48         1       2336.0   2336.0      0.0          with zipfile.ZipFile(f"{model_path}.zip", mode="r") as archive:
    49         6         15.0      2.5      0.0              for file in archive.namelist():
    50         5       5168.0   1033.6      0.1                  archive.extract(file, tmpdir)
    51
    52         2    7598761.0 3799380.5     99.9          model = tf.keras.models.load_model(
    53         1          1.0      1.0      0.0              f"{tmpdir}/{model_name}",
    54         1         10.0     10.0      0.0              custom_objects={"WeightedLogLoss": WeightedLogLoss()},
    55         1          1.0      1.0      0.0              compile=False,
    56                                                   )
    57
    58         1          2.0      2.0      0.0      return model

Total time: 0 s
File: load_run_lpa.py
Function: get_compressed_convert_to_lite at line 61

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    61                                           @profile
    62                                           def get_compressed_convert_to_lite(
    63                                               model_name: str = "model-GR-noZ-23057-1642540624-0.1.dev963+g309c9d8-LL0.968",
    64                                           ):
    65                                               # Load pre-trained model
    66                                               model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
    67
    68                                               with tempfile.TemporaryDirectory() as tmpdir:
    69                                                   with zipfile.ZipFile(f"{model_path}.zip", mode="r") as archive:
    70                                                       for file in archive.namelist():
    71                                                           archive.extract(file, tmpdir)
    72
    73                                                   lmodel = get_tflite_from_saved_model(f"{tmpdir}/{model_name}")
    74
    75                                               return lmodel

Total time: 7.14257 s
File: load_run_lpa.py
Function: get_clustered_model at line 78

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    78                                           @profile
    79                                           def get_clustered_model(
    80                                               model_name: str = "model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836",
    81                                           ):
    82                                               # Load pre-trained original t2 model
    83         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/{model_name}"
    84
    85         2    7142554.0 3571277.0    100.0      model = tf.keras.models.load_model(
    86         1          0.0      0.0      0.0          model_path,
    87         1         11.0     11.0      0.0          custom_objects={"WeightedLogLoss": WeightedLogLoss()},
    88         1          0.0      0.0      0.0          compile=False,
    89                                               )
    90
    91         1          2.0      2.0      0.0      return model

Total time: 7.01873 s
File: load_run_lpa.py
Function: get_compressed_clustered_model at line 94

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    94                                           @profile
    95                                           def get_compressed_clustered_model(
    96                                               model_name: str = "model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836",
    97                                           ):
    98                                               # Load pre-trained model
    99         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/{model_name}"
   100
   101         1        184.0    184.0      0.0      with tempfile.TemporaryDirectory() as tmpdir:
   102         1        508.0    508.0      0.0          with zipfile.ZipFile(f"{model_path}.zip", mode="r") as archive:
   103         7         16.0      2.3      0.0              for file in archive.namelist():
   104         6       5243.0    873.8      0.1                  archive.extract(file, tmpdir)
   105
   106         2    7012768.0 3506384.0     99.9          model = tf.keras.models.load_model(
   107         1          1.0      1.0      0.0              f"{tmpdir}/{model_name}",
   108         1          9.0      9.0      0.0              custom_objects={"WeightedLogLoss": WeightedLogLoss()},
   109         1          1.0      1.0      0.0              compile=False,
   110                                                   )
   111
   112         1          2.0      2.0      0.0      return model

Total time: 0.00279 s
File: load_run_lpa.py
Function: get_tflite_from_file at line 115

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   115                                           @profile
   116                                           def get_tflite_from_file(model_path: str):
   117         2       2790.0   1395.0    100.0      return LiteModel.from_file(model_path=model_path)

Total time: 0 s
File: load_run_lpa.py
Function: get_tflite_from_saved_model at line 120

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   120                                           @profile
   121                                           def get_tflite_from_saved_model(model_path: str):
   122                                               return LiteModel.from_saved_model(model_path=model_path)

Total time: 496.417 s
File: load_run_lpa.py
Function: predict_original_model at line 135

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   135                                           @profile
   136                                           def predict_original_model(X_test, wloss):
   137                                               # ORIGINAL T2 MODEL ON GR-noZ
   138                                               # BASELINE
   139         1    7755532.0 7755532.0      1.6      model = get_model()
   140         1  488549541.0 488549541.0     98.4      y_preds = model.predict(X_test)
   141         2        135.0     67.5      0.0      log.info(
   142         1     112066.0 112066.0      0.0          f"ORIGINAL T2 MODEL ON GR-noZ LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   143                                               )

Total time: 452.188 s
File: load_run_lpa.py
Function: predict_compressed_model at line 146

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   146                                           @profile
   147                                           def predict_compressed_model(X_test, wloss):
   148                                               # COMPRESSED MODEL, aka COMPRESSED T2
   149                                               # BASELINE + HUFFMAN
   150         1    7606488.0 7606488.0      1.7      cmodel = get_compressed_model()
   151         1  444485220.0 444485220.0     98.3      y_preds = cmodel.predict(X_test)
   152         2        146.0     73.0      0.0      log.info(
   153         1      96388.0  96388.0      0.0          f"COMPRESSED MODEL, aka COMPRESSED T2 LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   154                                               )

Total time: 513.777 s
File: load_run_lpa.py
Function: predict_clustered_model at line 157

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   157                                           @profile
   158                                           def predict_clustered_model(X_test, wloss):
   159                                               # CLUSTERED-STRIPPED MODEL, aka TINHO
   160                                               # CLUSTERING
   161         1    7142581.0 7142581.0      1.4      cmodel = get_clustered_model()
   162         1  506547697.0 506547697.0     98.6      y_preds = cmodel.predict(X_test)
   163         2        139.0     69.5      0.0      log.info(
   164         1      87060.0  87060.0      0.0          f"CLUSTERED-STRIPPED MODEL, aka TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   165                                               )

Total time: 501.615 s
File: load_run_lpa.py
Function: predict_compressed_clustered_model at line 168

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   168                                           @profile
   169                                           def predict_compressed_clustered_model(X_test, wloss):
   170                                               # COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO
   171                                               # CLUSTERING + HUFFMAN
   172         1    7018758.0 7018758.0      1.4      cmodel = get_compressed_clustered_model()
   173         1  494499217.0 494499217.0     98.6      y_preds = cmodel.predict(X_test)
   174         2        147.0     73.5      0.0      log.info(
   175         1      96804.0  96804.0      0.0          f"COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   176                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_pruned_model at line 179

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   179                                           @profile
   180                                           def predict_pruned_model(X_test, wloss):
   181                                               # PRUNED-STRIPPED MODEL
   182                                               # PRUNING
   183                                               # TODO: Update model_name
   184                                               model_name = ""
   185                                               pmodel = get_pruned_model(model_name)
   186                                               y_preds = pmodel.predict(X_test)
   187                                               log.info(f"PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}")

Total time: 0 s
File: load_run_lpa.py
Function: predict_compressed_clustered_pruned_model at line 190

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   190                                           @profile
   191                                           def predict_compressed_clustered_pruned_model(X_test, wloss):
   192                                               # COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, aka COMPRESSED TINHO
   193                                               # CLUSTERING + PRUNING + HUFFMAN
   194                                               # TODO: Update model_name
   195                                               model_name = ""
   196                                               ccpmodel = get_compressed_clustered_pruned_model(model_name)
   197                                               y_preds = ccpmodel.predict(X_test)
   198                                               log.info(
   199                                                   f"COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   200                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_clustered_tflite_model at line 203

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   203                                           @profile
   204                                           def predict_clustered_tflite_model(X_test, wloss):
   205                                               # CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   206                                               # CLUSTERING-FLATBUFFER CONVERSION
   207                                               model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
   208                                               lmodel = get_tflite_from_saved_model(model_path)
   209                                               y_preds = lmodel.predict(X_test)
   210                                               log.info(
   211                                                   f"TFLITE CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   212                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_compressed_clustered_tflite_model at line 215

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   215                                           @profile
   216                                           def predict_compressed_clustered_tflite_model(X_test, wloss):
   217                                               # COMPRESSED CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   218                                               # CLUSTERING-FLATBUFFER + HUFFMAN
   219                                               # TODO: Update model_name
   220                                               model_name = "tinho/compressed_clustered_stripped_fink_model"
   221                                               clmodel = get_compressed_lite_model(model_name)
   222                                               y_preds = clmodel.predict(X_test)
   223                                               log.info(
   224                                                   f"TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   225                                               )

Total time: 416.682 s
File: load_run_lpa.py
Function: predict_saved_clustered_tflite_model at line 228

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   228                                           @profile
   229                                           def predict_saved_clustered_tflite_model(X_test, wloss):
   230                                               # SAVED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE
   231                                               # CLUSTERING-FLATBUFFER
   232                                               # Load clustered model TFLite model, i.e. a .tflife model/file on disk
   233         1          1.0      1.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836.tflite"
   234         1        886.0    886.0      0.0      clmodel = get_tflite_from_file(model_path)
   235         1  416593620.0 416593620.0    100.0      y_preds = clmodel.predict(X_test)
   236         2        143.0     71.5      0.0      log.info(
   237         1      87340.0  87340.0      0.0          f"SAVED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   238                                               )

Total time: 405.856 s
File: load_run_lpa.py
Function: predict_saved_clustered_quantized_tflite_model at line 241

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   241                                           @profile
   242                                           def predict_saved_clustered_quantized_tflite_model(X_test, wloss):
   243                                               # SAVED QUANTIZED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE
   244                                               # CLUSTERING-FLATBUFFER + QUANTIZATION
   245                                               # Load clustered model TFLite model, i.e. a .tflife model/file on disk
   246                                               # model_path = f"{asnwd}/sbin/lnprof/clustered_stripped_fink_model_quantized.tflite"
   247         1          2.0      2.0      0.0      model_path = f"{asnwd}/astronet/tinho/models/plasticc/quantized-model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836.tflite"
   248         1       1913.0   1913.0      0.0      clmodel = get_tflite_from_file(model_path)
   249         1  405755985.0 405755985.0    100.0      y_preds = clmodel.predict(X_test)
   250         2        138.0     69.0      0.0      log.info(
   251         1      98099.0  98099.0      0.0          f"SAVED QUANTIZED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   252                                               )

