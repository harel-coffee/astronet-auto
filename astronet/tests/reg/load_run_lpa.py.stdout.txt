/Users/tallamjr/mambaforge/envs/astronet/lib/python3.8/site-packages/jax/_src/lib/__init__.py:34: UserWarning: JAX on Mac ARM machines is experimental and minimally tested. Please see https://github.com/google/jax/issues/5501 in the event of problems.
  warnings.warn("JAX on Mac ARM machines is experimental and minimally tested. "
0.9.3
/Users/tallamjr/github/tallamjr/origin/astronet/astronet/__init__.py
X_TEST: (869864, 100, 6), Y_TEST: (869864, 14)
Running predictions
WARNING:tensorflow:SavedModel saved prior to TF 2.5 detected when loading Keras model. Please ensure that you are saving the model with model.save() or tf.keras.models.save_model(), *NOT* tf.saved_model.save(). To confirm, there should be a file named "keras_metadata.pb" in the SavedModel directory.
Metal device set to: Apple M1 Pro

systemMemory: 32.00 GB
maxCacheSize: 10.67 GB

ORIGINAL T2 MODEL ON GR-noZ LL-Test: 0.97
WARNING:tensorflow:SavedModel saved prior to TF 2.5 detected when loading Keras model. Please ensure that you are saving the model with model.save() or tf.keras.models.save_model(), *NOT* tf.saved_model.save(). To confirm, there should be a file named "keras_metadata.pb" in the SavedModel directory.
COMPRESSED MODEL, aka COMPRESSED T2 LL-Test: 0.97
CLUSTERED-STRIPPED MODEL, aka TINHO LL-Test: 0.84
COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO LL-Test: 0.84
SAVED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: 0.84
SAVED QUANTIZED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: 0.83
Wrote profile results to load_run_lpa.py.lprof
Timer unit: 1e-06 s

Total time: 316.453 s
File: load_run_lpa.py
Function: predict_original_model at line 122

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   122                                               # ORIGINAL T2 MODEL ON GR-noZ
   123                                               # BASELINE
   124                                               model = get_model()
   125                                               y_preds = model.predict(X_test)
   126         1    6116597.0 6116597.0      1.9      print(f"ORIGINAL T2 MODEL ON GR-noZ LL-Test: {wloss(y_test, y_preds).numpy():.2f}")
   127         1  310242533.0 310242533.0     98.0
   128         1      93866.0  93866.0      0.0
   129                                           @profile
   130                                           def predict_compressed_model(X_test, wloss):
   131                                               # COMPRESSED MODEL, aka COMPRESSED T2
   132                                               # BASELINE + HUFFMAN
   133                                               cmodel = get_compressed_model()
   134                                               y_preds = cmodel.predict(X_test)
   135                                               print(
   136                                                   f"COMPRESSED MODEL, aka COMPRESSED T2 LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   137                                               )

Total time: 295.014 s
File: load_run_lpa.py
Function: predict_compressed_model at line 131

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   131                                               # COMPRESSED MODEL, aka COMPRESSED T2
   132                                               # BASELINE + HUFFMAN
   133                                               cmodel = get_compressed_model()
   134                                               y_preds = cmodel.predict(X_test)
   135         1    6294169.0 6294169.0      2.1      print(
   136         1  288639901.0 288639901.0     97.8          f"COMPRESSED MODEL, aka COMPRESSED T2 LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   137         2         22.0     11.0      0.0      )
   138         1      80226.0  80226.0      0.0
   139
   140                                           @profile
   141                                           def predict_clustered_model(X_test, wloss):
   142                                               # CLUSTERED-STRIPPED MODEL, aka TINHO
   143                                               # CLUSTERING
   144                                               cmodel = get_clustered_model()
   145                                               y_preds = cmodel.predict(X_test)
   146                                               print(
   147                                                   f"CLUSTERED-STRIPPED MODEL, aka TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   148                                               )

Total time: 384.482 s
File: load_run_lpa.py
Function: predict_clustered_model at line 142

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   142                                               # CLUSTERED-STRIPPED MODEL, aka TINHO
   143                                               # CLUSTERING
   144                                               cmodel = get_clustered_model()
   145                                               y_preds = cmodel.predict(X_test)
   146         1    5472265.0 5472265.0      1.4      print(
   147         1  378927225.0 378927225.0     98.6          f"CLUSTERED-STRIPPED MODEL, aka TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   148         2         23.0     11.5      0.0      )
   149         1      82354.0  82354.0      0.0
   150
   151                                           @profile
   152                                           def predict_compressed_clustered_model(X_test, wloss):
   153                                               # COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO
   154                                               # CLUSTERING + HUFFMAN
   155                                               cmodel = get_compressed_clustered_model()
   156                                               y_preds = cmodel.predict(X_test)
   157                                               print(
   158                                                   f"COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   159                                               )

Total time: 308.402 s
File: load_run_lpa.py
Function: predict_compressed_clustered_model at line 153

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   153                                               # COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO
   154                                               # CLUSTERING + HUFFMAN
   155                                               cmodel = get_compressed_clustered_model()
   156                                               y_preds = cmodel.predict(X_test)
   157         1    5635951.0 5635951.0      1.8      print(
   158         1  302689548.0 302689548.0     98.1          f"COMPRESSED CLUSTERED-STRIPPED MODEL, aka COMPRESSED TINHO LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   159         2         21.0     10.5      0.0      )
   160         1      76226.0  76226.0      0.0
   161
   162                                           @profile
   163                                           def predict_pruned_model(X_test, wloss):
   164                                               # PRUNED-STRIPPED MODEL
   165                                               # PRUNING
   166                                               # TODO: Update model_name
   167                                               model_name = ""
   168                                               pmodel = get_pruned_model(model_name)
   169                                               y_preds = pmodel.predict(X_test)
   170                                               print(f"PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}")

Total time: 0 s
File: load_run_lpa.py
Function: predict_pruned_model at line 164

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   164                                               # PRUNED-STRIPPED MODEL
   165                                               # PRUNING
   166                                               # TODO: Update model_name
   167                                               model_name = ""
   168                                               pmodel = get_pruned_model(model_name)
   169                                               y_preds = pmodel.predict(X_test)
   170                                               print(f"PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}")
   171
   172
   173                                           @profile
   174                                           def predict_compressed_clustered_pruned_model(X_test, wloss):
   175                                               # COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, aka COMPRESSED TINHO
   176                                               # CLUSTERING + PRUNING + HUFFMAN
   177                                               # TODO: Update model_name
   178                                               model_name = ""
   179                                               ccpmodel = get_compressed_clustered_pruned_model(model_name)
   180                                               y_preds = ccpmodel.predict(X_test)
   181                                               print(
   182                                                   f"COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   183                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_compressed_clustered_pruned_model at line 175

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   175                                               # COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, aka COMPRESSED TINHO
   176                                               # CLUSTERING + PRUNING + HUFFMAN
   177                                               # TODO: Update model_name
   178                                               model_name = ""
   179                                               ccpmodel = get_compressed_clustered_pruned_model(model_name)
   180                                               y_preds = ccpmodel.predict(X_test)
   181                                               print(
   182                                                   f"COMPRESSED CLUSTERED-PRUNED-STRIPPED MODEL, LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   183                                               )
   184
   185
   186                                           @profile
   187                                           def predict_clustered_tflite_model(X_test, wloss):
   188                                               # CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   189                                               # CLUSTERING-FLATBUFFER CONVERSION
   190                                               model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
   191                                               lmodel = LiteModel.from_saved_model(model_path)
   192                                               y_preds = lmodel.predict(X_test)
   193                                               print(
   194                                                   f"TFLITE CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   195                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_clustered_tflite_model at line 188

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   188                                               # CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   189                                               # CLUSTERING-FLATBUFFER CONVERSION
   190                                               model_path = f"{asnwd}/astronet/t2/models/plasticc/{model_name}"
   191                                               lmodel = LiteModel.from_saved_model(model_path)
   192                                               y_preds = lmodel.predict(X_test)
   193                                               print(
   194                                                   f"TFLITE CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   195                                               )
   196
   197
   198                                           @profile
   199                                           def predict_compressed_clustered_tflite_model(X_test, wloss):
   200                                               # COMPRESSED CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   201                                               # CLUSTERING-FLATBUFFER + HUFFMAN
   202                                               # TODO: Update model_name
   203                                               model_name = "tinho/compressed_clustered_stripped_fink_model"
   204                                               clmodel = get_compressed_lite_model(model_name)
   205                                               y_preds = clmodel.predict(X_test)
   206                                               print(
   207                                                   f"TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   208                                               )

Total time: 0 s
File: load_run_lpa.py
Function: predict_compressed_clustered_tflite_model at line 200

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   200                                               # COMPRESSED CLUSTERED-STRIPPED MODEL (TINHO), TFLITE INTERPRETER
   201                                               # CLUSTERING-FLATBUFFER + HUFFMAN
   202                                               # TODO: Update model_name
   203                                               model_name = "tinho/compressed_clustered_stripped_fink_model"
   204                                               clmodel = get_compressed_lite_model(model_name)
   205                                               y_preds = clmodel.predict(X_test)
   206                                               print(
   207                                                   f"TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   208                                               )
   209
   210
   211                                           @profile
   212                                           def predict_saved_clustered_tflite_model(X_test, wloss):
   213                                               # SAVED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE
   214                                               # CLUSTERING-FLATBUFFER
   215                                               # Load clustered model TFLite model, i.e. a .tflife model/file on disk
   216                                               model_path = f"{asnwd}/astronet/tinho/models/plasticc/model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836.tflite"
   217                                               clmodel = LiteModel.from_file(model_path=model_path)
   218                                               y_preds = clmodel.predict(X_test)
   219                                               print(
   220                                                   f"SAVED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   221                                               )

Total time: 322.441 s
File: load_run_lpa.py
Function: predict_saved_clustered_tflite_model at line 213

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   213                                               # SAVED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE
   214                                               # CLUSTERING-FLATBUFFER
   215                                               # Load clustered model TFLite model, i.e. a .tflife model/file on disk
   216                                               model_path = f"{asnwd}/astronet/tinho/models/plasticc/model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836.tflite"
   217                                               clmodel = LiteModel.from_file(model_path=model_path)
   218         1          1.0      1.0      0.0      y_preds = clmodel.predict(X_test)
   219         1       9405.0   9405.0      0.0      print(
   220         1  322360365.0 322360365.0    100.0          f"SAVED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   221         2         22.0     11.0      0.0      )
   222         1      71327.0  71327.0      0.0
   223
   224                                           @profile
   225                                           def predict_saved_clustered_quantized_tflite_model(X_test, wloss):
   226                                               # SAVED QUANTIZED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE
   227                                               # CLUSTERING-FLATBUFFER + QUANTIZATION
   228                                               # Load clustered model TFLite model, i.e. a .tflife model/file on disk
   229                                               # model_path = f"{asnwd}/sbin/lnprof/clustered_stripped_fink_model_quantized.tflite"
   230                                               model_path = f"{asnwd}/astronet/tinho/models/plasticc/quantized-model-GR-noZ-28341-1654269564-0.5.1.dev73+g70f85f8-LL0.836.tflite"
   231                                               clmodel = LiteModel.from_file(model_path=model_path)
   232                                               y_preds = clmodel.predict(X_test)
   233                                               print(
   234                                                   f"SAVED QUANTIZED TFLITE COMPRESSED CLUSTERED-STRIPPED MODEL LL-Test: {wloss(y_test, y_preds).numpy():.2f}"
   235                                               )

Total time: 318.68 s
File: load_run_lpa.py
Function: predict_saved_clustered_quantized_tflite_model at line 226

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   226                                               # SAVED QUANTIZED TFLITE CLUSTERED-STRIPPED MODEL, .tflife FILE

